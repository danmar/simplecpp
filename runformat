#!/bin/bash
#
# runformat - format this project's C++ sources with Uncrustify.
#
# Usage:
#   ./runformat             # format using the configured Uncrustify
#
# Requirements:
#   - All developers must use the *exact* same Uncrustify version to avoid format churn.
#   - Either:
#       * Have `uncrustify` in PATH, or
#       * Set env var UNCRUSTIFY=/absolute/path/to/uncrustify
#
# Notes:
#   - The config file is expected at: ./.uncrustify.cfg
#
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

UNCRUSTIFY_VERSION="0.80.1"
UNCRUSTIFY="${UNCRUSTIFY-uncrustify}"

err() { echo -e >&2 "ERROR: $@\n"; }
die() { err $@; exit 1; }

# Check Uncrustify availability
if ! command -v "$UNCRUSTIFY" >/dev/null 2>&1; then
  err "Uncrustify executable not found: $UNCRUSTIFY"
  die "Add it to PATH or set UNCRUSTIFY=/path/to/uncrustify"
fi

# Version check
DETECTED_VERSION="$("$UNCRUSTIFY" --version 2>&1 | grep -oE '[0-9]+(\.[0-9]+)*' | head -n1 || true)"
echo "Detected Uncrustify: ${DETECTED_VERSION:-unknown}"
if [[ "$DETECTED_VERSION" != "${UNCRUSTIFY_VERSION}" ]]; then
  die "Expected Uncrustify ${UNCRUSTIFY_VERSION}."
fi

# Run formatter
echo "Running formatter..."
$UNCRUSTIFY -c .uncrustify.cfg -l CPP --no-backup --replace *.cpp *.h

# Show diff and fail if changes exist
echo "Checking for formatting changes..."
git diff --exit-code || {
  echo
  echo "Formatting changes were applied. Please review and commit."
  exit 1
}

echo "Formatting is clean."
