#!/bin/bash
#
# uncrustify-0.72 is used to format simplecpp and cppcheck source code.
#
# 1. Download source code: https://github.com/uncrustify/uncrustify/archive/refs/tags/uncrustify-0.72.0.zip
#    It's important that all developers use the exact same version so we don't get a "format battle".
# 2. Building:
#    - Linux: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make
#    - Windows: mkdir build && cd build && cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release .. && nmake
# 3. Ensure that the binary "uncrustify" is found by runformat. Either:
#    - you can put uncrustify in your PATH
#    - you can create an environment variable UNCRUSTIFY that has the full path of the binary

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

UNCRUSTIFY_VERSION="0.72.0"
UNCRUSTIFY="${UNCRUSTIFY-uncrustify}"

err() { echo -e >&2 "ERROR: $@\n"; }
die() { err $@; exit 1; }

# Check Uncrustify availability
if ! command -v "$UNCRUSTIFY" >/dev/null 2>&1; then
  err "Uncrustify executable not found: $UNCRUSTIFY"
  die "Add it to PATH or set UNCRUSTIFY=/path/to/uncrustify"
fi

# Version check
DETECTED_VERSION="$("$UNCRUSTIFY" --version 2>&1 | grep -oE '[0-9]+(\.[0-9]+)*' | head -n1 || true)"
echo "Detected Uncrustify: ${DETECTED_VERSION:-unknown}"
if [[ "$DETECTED_VERSION" != "${UNCRUSTIFY_VERSION}" ]]; then
  die "Expected Uncrustify ${UNCRUSTIFY_VERSION}."
fi

$UNCRUSTIFY -c .uncrustify.cfg --no-backup *.cpp *.h
